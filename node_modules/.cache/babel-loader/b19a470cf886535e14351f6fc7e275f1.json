{"ast":null,"code":"var _jsxFileName = \"/Users/rusuraluca/Desktop/smart-brain/smart-brain/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  boxes: [],\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return data.outputs[0].data.regions.map(face => {\n        const clarifaiFace = face.region_info.bounding_box;\n        return {\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - clarifaiFace.right_col * width,\n          bottomRow: height - clarifaiFace.bottom_row * height\n        };\n      });\n    };\n\n    this.displayFaceBox = boxes => {\n      this.setState({\n        boxes: boxes\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('https://frozen-caverns-18325.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('https://frozen-caverns-18325.herokuapp.com/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      boxes\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }), route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      boxes: boxes,\n      imageUrl: imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    })) : route === 'signin' ? /*#__PURE__*/React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 16\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rusuraluca/Desktop/smart-brain/smart-brain/src/App.js"],"names":["React","Component","Particles","FaceRecognition","Navigation","SignIn","Register","Logo","ImageLinkForm","Rank","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","boxes","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","image","document","getElementById","width","Number","height","outputs","regions","map","face","clarifaiFace","region_info","bounding_box","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","console","log","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  boxes: [],\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return data.outputs[0].data.regions.map(face => {\n      const clarifaiFace = face.region_info.bounding_box;\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - (clarifaiFace.right_col * width),\n        bottomRow: height - (clarifaiFace.bottom_row * height)\n      }\n    });\n  }\n\n  displayFaceBox = (boxes) => {\n    this.setState({boxes: boxes});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n      fetch('https://frozen-caverns-18325.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://frozen-caverns-18325.herokuapp.com/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count}))\n            })\n            .catch(console.log)\n\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    } \n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, boxes } = this.state;\n    return (\n      <div className=\"App\">\n         <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ? <div>\n              <Logo />\n              <Rank\n                name={this.state.user.name}\n                entries={this.state.user.entries}\n              />\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition boxes={boxes} imageUrl={imageUrl} />\n            </div>\n          : (\n             route === 'signin'\n             ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n             : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}